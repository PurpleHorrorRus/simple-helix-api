import { AxiosRequestHeaders } from "axios";
import Analytics from "./lib/requests/analytics";
import Automod from "./lib/requests/automod";
import Channel from "./lib/requests/channel";
import Chat from "./lib/requests/chat";
import Clips from "./lib/requests/clips";
import Commercial from "./lib/requests/commercial";
import Events from "./lib/requests/events";
import Games from "./lib/requests/games";
import Markers from "./lib/requests/markers";
import Moderation from "./lib/requests/moderation";
import Other from "./lib/requests/other";
import Polls from "./lib/requests/polls";
import Predictions from "./lib/requests/predictions";
import Rewards from "./lib/requests/rewards";
import Schedule from "./lib/requests/schedule";
import Search from "./lib/requests/search";
import Soundtrack from "./lib/requests/soundtrack";
import Stream from "./lib/requests/stream";
import Subscriptions from "./lib/requests/subscriptions";
import Tags from "./lib/requests/tags";
import Teams from "./lib/requests/teams";
import Users from "./lib/requests/users";
import Videos from "./lib/requests/videos";
import EventSub from "./lib/eventsub/websocket";
import Static from "./lib/static";
declare type HelixInitParams = {
    client_id: string;
    access_token?: string;
    language?: string;
};
declare class Helix extends Static {
    private client_id;
    private language?;
    headers: AxiosRequestHeaders;
    analytics: Analytics;
    automod: Automod;
    channel: Channel;
    chat: Chat;
    clips: Clips;
    commercial: Commercial;
    events: Events;
    games: Games;
    markers: Markers;
    moderation: Moderation;
    other: Other;
    polls: Polls;
    predictions: Predictions;
    rewards: Rewards;
    schedule: Schedule;
    search: Search;
    soundtrack: Soundtrack;
    stream: Stream;
    subscriptions: Subscriptions;
    tags: Tags;
    teams: Teams;
    users: Users;
    videos: Videos;
    EventSub: EventSub;
    constructor(params: HelixInitParams);
    getAuthLink(scopes: string[] | undefined, redirect_uri: string): Promise<string | void>;
    updateStream(broadcaster_id: number, title: string, game: string): Promise<any>;
}
export default Helix;
